version 2.0;

import module "SilKit";

namespace KeyA
{ 
  // Enums and structs for gpio mode
  enum RecvValue : uint8
  {
    Low = 0,
    High = 1,
    Unknown = 2
  }
  
  // Restrict the user to send 0 or 1
  enum SendValue : uint8
  {
    Low = 0,
    High = 1
  }
  
  enum Direction : uint8
  {
    Input = 0,
    Output = 1
  }
  
  struct RecvLineValue
  {
    RecvValue value;
    Direction direction;
  }
  
  struct SendLineValue
  {
    SendValue value;
    Direction direction;
  }
  
  //////////////////////////
  // Handle received data //
  //////////////////////////
  [Binding="SilKit"]
  interface GLIOAdapter
  {
    // adchip0 //
    consumed data int16 fromVoltage15 = 0;
    consumed data int16 fromVoltage32 = 0;
    
    // adchip1 //
    consumed data uint8 fromPIN12Value = 0;
    consumed data uint8 fromPIN12Dir = 0;
    
    // chardevs //
    consumed data string fromFifo1 = "";
    consumed data string fromFifo2 = "";
    
    // gpiochip0 //
    consumed data RecvLineValue fromGpiochip0Line0 = {value: KeyA::RecvValue.Low, direction: KeyA::Direction.Input};
    consumed data RecvLineValue fromGpiochip0Line1 = {value: KeyA::RecvValue.Low, direction: KeyA::Direction.Input};
    consumed data RecvLineValue fromGpiochip0Line4 = {value: KeyA::RecvValue.Low, direction: KeyA::Direction.Input};
    
    // gpiochip1 //
    consumed data RecvLineValue fromGpiochip1Line1 = {value: KeyA::RecvValue.Low, direction: KeyA::Direction.Input};
  }
  
  GLIOAdapter Receiver;
  
  /////////////////////////
  // Handle data to send //
  /////////////////////////
  [Binding="SilKit"]
  interface ValueSender
  {
    // adchip0 //
    provided data int16 toVoltage103 = 0;
    provided data int16 toVoltage15 = 0;
    
    // adchip1 //
    provided data uint8 toPIN12Value = 0;
    provided data uint8 toPIN12Dir = 0;
    provided data double toVoltage5 = 0;
    
    // chardevs //
    provided data string toFifo2 = "";
    
    // gpiochip0 //
    provided data SendLineValue toGpiochip0Line0 = {value: KeyA::SendValue.Low, direction: KeyA::Direction.Input};
    provided data SendLineValue toGpiochip0Line1 = {value: KeyA::SendValue.Low, direction: KeyA::Direction.Input};
    provided data SendLineValue toGpiochip0Line2 = {value: KeyA::SendValue.Low, direction: KeyA::Direction.Input};
    
    // gpiochip1 //
    provided data SendLineValue toGpiochip1Line1 = {value: KeyA::SendValue.Low, direction: KeyA::Direction.Input};
    provided data SendLineValue toGpiochip1Line2 = {value: KeyA::SendValue.Low, direction: KeyA::Direction.Input};
  }
  
  ValueSender Sender;
}